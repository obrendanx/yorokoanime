@using Microsoft.EntityFrameworkCore.Metadata.Internal
@model yorokoanime.ViewModels.AnimeModel

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
<h2>@Model.Title</h2>
<hr/>

<div class="main-card-body">
    
    <div class="card-right">
        <div class="card-score">
            <div>
                <h3>Score</h3>
                <h4 class="text-center">@Model.Score</h4>
            </div>
            
            <div class="card-rank">
                <div class="card-rank-main">
                    <ul>
                        <li>Ranked: @Model.Rank</li>
                        <li>Popularity: @Model.Popularity</li>
                        <li>Members: @Model.Members</li>
                    </ul>
                </div>

                <div class="card-sub-info">
                    <ul>
                        <li>@Model.Season @Model.Year</li>
                        <li>@Model.Type</li>
                        <li>@Model.Producers.FirstOrDefault().Name</li>
                    </ul>
                </div>
            </div>
        </div>


        @if (User.Identity.IsAuthenticated)
        {
            <form asp-action="SaveUserAnimePreferences" asp-controller="Card" method="post" class="pref-form">
                <div class="card-user">
                    <ul>
                        <li>
                            <input type="hidden" asp-for="isLiked" id="isLiked" />
                            <button type="submit" class="btn btn-primary" onclick="setLike()"
                                    @(User.Identity.IsAuthenticated ? "" : "disabled")>
                                @(Model.isLiked ? "Remove from Favorites" : "Add to Favorites")
                            </button>
                        </li>
                    
                            <label asp-for="userRating" class="ml-1">Rating</label>
                            <li>
                                <select asp-for="userRating" asp-items="Model.RatingOptions"
                                        class="form-select btn-secondary"
                                        onchange="this.form.submit();">
                                </select>
                            </li>
                        
                            <label asp-for="userEpisodes" class="ml-1">Episodes Watched</label>
                            <li>
                                <select asp-for="userEpisodes" asp-items="Model.EpisodeOptions"
                                        class="form-select btn-secondary"
                                        onchange="this.form.submit();">
                                </select>
                            </li>
                    </ul>

                    <input type="hidden" asp-for="MalId" />
                </div>
            </form>
        }


        <p class="card-syn">
            <h2 class="h2">Synopsis</h2>
            <hr/>
            
            @Model.Synopsis
        </p>

        @if (Model.Background != null)
        {
            <p class="card-syn mt-3">
                <h2 class="h2">Background</h2>
                <hr/>

                @Model.Background
            </p>
        }
    </div>

    <div class="card-left">
        <div>
            <img src="@Model.Images.Jpg.ImageUrl" class="" alt="@Model.Title">
        </div>

        <div class="title mt-2">
            <h3>Alternative Titles</h3>
            <hr/>
            <ul>
                <li>Japanese: @Model.TitleJapanese</li>
                <li>English: @Model.TitleEnglish</li>
                <li>Synonyms: </li>
            </ul>
        </div>

        <div class="info">
            <h3>Information</h3>
            <hr/>
            <ul>
                <li>Type: @Model.Type</li>
                <li>Episodes: @Model.Episodes</li>
                <li>Status: @Model.Status</li>
                <li>Aired: @Model.Aired.DateString</li>
                <li>Premiered: </li>
                <li>Broadcast: @Model.Broadcast.Day at @Model.Broadcast.Time (@Model.Broadcast.Timezone)</li>
                <li>Producers: @(Model.Producers != null && Model.Producers.Any()
                                       ? string.Join(", ", Model.Producers.Select(p => p.Name))
                                       : "N/A")</li>
                <li>Licensors: @(Model.Licensors != null && Model.Licensors.Any()
                                       ? string.Join(", ", Model.Licensors.Select(p => p.Name))
                                       : "N/A")</li>
                <li>Studios: @(Model.Studios != null && Model.Studios.Any()
                                     ? string.Join(", ", Model.Studios.Select(p => p.Name))
                                     : "N/A")</li>
                <li>Source: @Model.Source</li>
                <li>Genres: @(Model.Genres != null && Model.Genres.Any()
                                    ? string.Join(", ", Model.Genres.Select(p => p.Name))
                                    : "N/A")</li>
                <li>Theme: @(Model.Themes != null && Model.Themes.Any()
                                   ? string.Join(", ", Model.Themes.Select(p => p.Name))
                                   : "N/A")</li>
                <li>Demographic: @(Model.Demographics != null && Model.Demographics.Any()
                                         ? string.Join(", ", Model.Demographics.Select(p => p.Name))
                                         : "N/A")</li>
                <li>Duration: @Model.Duration</li>
                <li>Rating: @Model.Rating</li>
            </ul>
        </div>
    </div>

</div>

<script>
    function updateRating() {
        const slider = document.getElementById('ratingSlider');
        const output = document.getElementById('ratingOutput');
        const hiddenInput = document.getElementById('ratingInput');
        output.textContent = slider.value;
        hiddenInput.value = slider.value;
    }

    function selectEpisode(episode) {
        document.getElementById('selectedEpisode').innerText = episode;
        document.getElementById('episodeInput').value = episode;
        document.getElementById('episodeDropdownMenu').textContent = 'Episode ' + episode;
    }
    
    function setLike(){
        var btn = document.getElementById('isLiked');

        console.log(btn.value);
        
        if (btn.value == 'True'){
            btn.value = "False";
        }
        else{
            btn.value = "True";
        }
        
        console.log("clicked");
    }
</script>